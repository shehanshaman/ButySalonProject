/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ItemControllerByChule;
import controller.OrderControllerByDilan;
import controller.OrderDetailControllerByDilan;
import controller.UserControllerByChule;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.OrderDetail;
import models.Orders;
import models.User;

/**
 *
 * @author Kanishka Gunarathna
 */
public class ViewOrdersPenal extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrdersPenal
     *
     */
    private DefaultTableModel tableModel = new DefaultTableModel();

    public ViewOrdersPenal() {
        initComponents();
        idCombo.setEnabled(false);
        orderId.setEnabled(true);
        userComboBox.setEnabled(false);
        datePicker.setEnabled(false);
        tableModel = (DefaultTableModel) itemTable.getModel();
        try {
            loadAllUsers();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        dateR = new javax.swing.JRadioButton();
        orderIdR = new javax.swing.JRadioButton();
        datePicker = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        userR = new javax.swing.JRadioButton();
        idCombo = new javax.swing.JComboBox();
        userComboBox = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orderId = new javax.swing.JTextField();
        orderDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        totalAmount = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        orderTime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        discountAmount = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        netAmount = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        buttonGroup1.add(dateR);
        dateR.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        dateR.setText("  By Date");
        dateR.setOpaque(false);
        dateR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateRMouseClicked(evt);
            }
        });
        dateR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateRActionPerformed(evt);
            }
        });
        jPanel1.add(dateR);
        dateR.setBounds(551, 7, 91, 31);

        buttonGroup1.add(orderIdR);
        orderIdR.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        orderIdR.setSelected(true);
        orderIdR.setText("  By Order ID");
        orderIdR.setOpaque(false);
        orderIdR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderIdRMouseClicked(evt);
            }
        });
        orderIdR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdRActionPerformed(evt);
            }
        });
        jPanel1.add(orderIdR);
        orderIdR.setBounds(45, 7, 117, 31);

        datePicker.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        datePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerActionPerformed(evt);
            }
        });
        jPanel1.add(datePicker);
        datePicker.setBounds(494, 40, 200, 31);

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Buying price", "Selling price", "Order QTY", "Total Each Item"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(itemTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(23, 232, 660, 230);

        buttonGroup1.add(userR);
        userR.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        userR.setText("  By User");
        userR.setOpaque(false);
        userR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userRMouseClicked(evt);
            }
        });
        userR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userRActionPerformed(evt);
            }
        });
        jPanel1.add(userR);
        userR.setBounds(281, 7, 89, 31);

        idCombo.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        idCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                idComboItemStateChanged(evt);
            }
        });
        jPanel1.add(idCombo);
        idCombo.setBounds(13, 40, 160, 31);

        userComboBox.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        userComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                userComboBoxItemStateChanged(evt);
            }
        });
        userComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(userComboBox);
        userComboBox.setBounds(182, 40, 300, 31);
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(31, 87, 672, 10);

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel1.setText("Order ID :");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(24, 131, 86, 29);

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel2.setText("Order Time :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(370, 150, 120, 22);

        orderId.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        orderId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdActionPerformed(evt);
            }
        });
        jPanel1.add(orderId);
        orderId.setBounds(114, 133, 142, 29);

        orderDate.setEditable(false);
        orderDate.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jPanel1.add(orderDate);
        orderDate.setBounds(499, 117, 170, 29);

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        jLabel3.setText("Total Price");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(369, 480, 130, 36);

        totalAmount.setEditable(false);
        totalAmount.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jPanel1.add(totalAmount);
        totalAmount.setBounds(513, 480, 170, 36);

        user.setEditable(false);
        user.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jPanel1.add(user);
        user.setBounds(109, 192, 230, 29);

        jLabel4.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel4.setText("User       :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(24, 193, 80, 22);

        orderTime.setEditable(false);
        orderTime.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jPanel1.add(orderTime);
        orderTime.setBounds(500, 150, 170, 29);

        jLabel5.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel5.setText("Order Date :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(368, 115, 110, 29);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Jb6iCptqqqq.jpg"))); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 0, 720, 150);

        jLabel7.setFont(new java.awt.Font("Lucida Bright", 1, 24)); // NOI18N
        jLabel7.setText("Discount :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(40, 480, 130, 36);

        discountAmount.setEditable(false);
        discountAmount.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jPanel1.add(discountAmount);
        discountAmount.setBounds(190, 480, 170, 36);

        jLabel8.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel8.setText("Net amount :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(370, 190, 120, 22);

        netAmount.setEditable(false);
        netAmount.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jPanel1.add(netAmount);
        netAmount.setBounds(500, 190, 170, 29);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userRMouseClicked

    }//GEN-LAST:event_userRMouseClicked

    private void dateRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateRMouseClicked

    }//GEN-LAST:event_dateRMouseClicked

    private void orderIdRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderIdRMouseClicked

    }//GEN-LAST:event_orderIdRMouseClicked

    private void orderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdActionPerformed
        if (!orderId.getText().isEmpty()) {
            try {
                if (setOrderDetail()) {
                    setOrdersDetail();
                } else {
                    resetAll();
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please insert a valid order number", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_orderIdActionPerformed

    private void userComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userComboBoxActionPerformed

    private void userComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_userComboBoxItemStateChanged
        if (userComboBox.getItemCount() > 0) {
            try {
                loadOrderIdsByUser();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_userComboBoxItemStateChanged

    private void idComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_idComboItemStateChanged
        if (idCombo.getItemCount() > 0) {
            try {
                if (setOrderDetail()) {
                    setOrdersDetail();
                } else {
                    resetAll();
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_idComboItemStateChanged

    private void datePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerActionPerformed
        try {
            resetAll();
            loadOrderIdsByDate();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_datePickerActionPerformed

    private void orderIdRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdRActionPerformed
        resetAll();
        idCombo.setEnabled(false);
        idCombo.removeAllItems();
        orderId.setEnabled(true);
        userComboBox.setEnabled(false);
        datePicker.setEnabled(false);
    }//GEN-LAST:event_orderIdRActionPerformed

    private void userRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userRActionPerformed
        resetAll();
        idCombo.setEnabled(true);
        orderId.setEnabled(false);
        userComboBox.setEnabled(true);
        datePicker.setEnabled(false);
        idCombo.removeAllItems();
        if (userComboBox.getItemCount() > 0) {
            try {
                loadOrderIdsByUser();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_userRActionPerformed

    private void dateRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateRActionPerformed
        resetAll();
        idCombo.setEnabled(true);
        orderId.setEnabled(false);
        userComboBox.setEnabled(false);
        datePicker.setEnabled(true);
        idCombo.removeAllItems();
        try {
            loadOrderIdsByDate();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_dateRActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JRadioButton dateR;
    private javax.swing.JTextField discountAmount;
    private javax.swing.JComboBox idCombo;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField netAmount;
    private javax.swing.JTextField orderDate;
    private javax.swing.JTextField orderId;
    private javax.swing.JRadioButton orderIdR;
    private javax.swing.JTextField orderTime;
    private javax.swing.JTextField totalAmount;
    private javax.swing.JTextField user;
    private javax.swing.JComboBox userComboBox;
    private javax.swing.JRadioButton userR;
    // End of variables declaration//GEN-END:variables

    private boolean setOrderDetail() throws SQLException, ClassNotFoundException, IOException {
        String orderId = "";
        if (orderIdR.isSelected()) {
            orderId = this.orderId.getText().trim();
        } else {
            orderId = idCombo.getSelectedItem().toString().trim();
        }

        Orders searchOrders = new OrderControllerByDilan().searchOrders(orderId.trim());
        if (searchOrders != null) {
            orderDate.setText(searchOrders.getOrderDate());
            orderTime.setText(searchOrders.getTime());
            user.setText(searchOrders.getUserName());
            totalAmount.setText(String.valueOf(searchOrders.getTotalAmount()));
            discountAmount.setText(String.valueOf(searchOrders.getDiscountAmount()));
            netAmount.setText(String.valueOf(searchOrders.getTotalAmount() - searchOrders.getDiscountAmount()));
            return true;
        } else {
            JOptionPane.showMessageDialog(null, "There is no such a orderId in the system", null, JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private void setOrdersDetail() throws ClassNotFoundException, SQLException, IOException {
        tableModel.setRowCount(0);
        String orderId = "";
        tableModel.setRowCount(0);
        if (orderIdR.isSelected()) {
            orderId = this.orderId.getText().trim();
        } else {
            orderId = idCombo.getSelectedItem().toString().trim();
        }
        ArrayList<OrderDetail> searchOrderDetail = OrderDetailControllerByDilan.searchOrderDetail(orderId);
        if (searchOrderDetail.size() > 0) {
            ItemControllerByChule itemController = new ItemControllerByChule();
            for (OrderDetail orderDetail : searchOrderDetail) {
                String itemName = itemController.searchItem(orderDetail.getItemCode()).getItemName();
                double buyingPrice = orderDetail.getSupplierPrice();
                double sellingPrice = orderDetail.getSellingPrice();
                tableModel.addRow(new String[]{orderDetail.getItemCode(),
                    itemName, String.valueOf(buyingPrice), 
                    String.valueOf(sellingPrice), 
                    String.valueOf(orderDetail.getOrderQty()), 
                    String.valueOf(orderDetail.getTotalPerEachItem())
                });
            }
        } else {
            JOptionPane.showMessageDialog(null, "There is no such a orderId in the system", null, JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadAllUsers() throws ClassNotFoundException, SQLException, IOException {
        ArrayList<User> allUsers = UserControllerByChule.getAllUser();
        for (User user : allUsers) {
            userComboBox.addItem(user.getUserName());
        }
    }

    private void resetAll() {
        orderDate.setText(null);
        orderTime.setText(null);
        user.setText(null);
        totalAmount.setText("0.0");
        tableModel.setRowCount(0);
        orderId.setText(null);
        netAmount.setText("0.0");
    }

    private void loadOrderIdsByUser() throws IOException {
        idCombo.removeAllItems();
        try {
            OrderControllerByDilan orderController = new OrderControllerByDilan();
            ArrayList<Orders> searchOrdersByUser = orderController.searchOrdersByUser(userComboBox.getSelectedItem().toString().trim());
            for (Orders orders : searchOrdersByUser) {
                idCombo.addItem(orders.getOrderId());
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadOrderIdsByDate() throws IOException {
        idCombo.removeAllItems();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        try {
            OrderControllerByDilan orderController = new OrderControllerByDilan();
            ArrayList<Orders> searchOrdersByUser = orderController.searchOrdersByDate(dateFormat.format(datePicker.getDate()));
            for (Orders orders : searchOrdersByUser) {
                idCombo.addItem(orders.getOrderId());
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        }
    }
}
