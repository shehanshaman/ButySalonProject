/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import comboSearch.ComboSearch;
import controller.CatergoryControllerByChule;
import controller.ItemControllerByChule;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import models.Catergory;
import models.Item;
import validation.Validation;

/**
 *
 * @author Kanishka Gunarathna
 */
public class ModifyItemPenal extends javax.swing.JPanel {

    /**
     * Creates new form ModifyItamPenal
     */
    private ComboSearch getItemList;

    public ModifyItemPenal() {
        try {
            initComponents();
            getItemList = new ComboSearch();
            getItemList();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        itemCodeCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        catergoryName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        modifyButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        qOHText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        buyingPriceText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sellingPriceText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        newItemName = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        itemCodeCombo.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        itemCodeCombo.setForeground(new java.awt.Color(51, 51, 255));
        itemCodeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemCodeComboItemStateChanged(evt);
            }
        });
        itemCodeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCodeComboActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel2.setText("Item Code   :");

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 36)); // NOI18N
        jLabel1.setText("Modify Item");

        catergoryName.setEditable(false);
        catergoryName.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel3.setText("New name :");

        modifyButton.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel7.setText("Qty On Hand:");

        qOHText.setEditable(false);
        qOHText.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel5.setText("Buying Price:");

        buyingPriceText.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        buyingPriceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buyingPriceTextKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel6.setText("Selling Price:");

        sellingPriceText.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        sellingPriceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sellingPriceTextKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel8.setText("Catergory :");

        newItemName.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        newItemName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newItemNameFocusGained(evt);
            }
        });
        newItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newItemNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(jLabel7))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qOHText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(catergoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buyingPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(sellingPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(itemCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(modifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(264, 264, 264))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(catergoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qOHText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyingPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(sellingPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(modifyButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        if (!(itemCodeCombo.getSelectedItem().toString().length() < 1 || newItemName.getText().trim().isEmpty() || buyingPriceText.getText().isEmpty() || sellingPriceText.getText().isEmpty())&& itemCodeCombo.getSelectedIndex()!=-1) {

            StringTokenizer st = new StringTokenizer(newItemName.getText().trim());
            int i = 0;
            String token = "";
            while (st.hasMoreTokens()) {
                token = st.nextToken("<##>");
                if ((token != null) && !token.equals(newItemName.getText().trim())) {
                    i++;
                }
            }
            if (i==0) {
                if ((buyingPriceText.getText().matches("[\\d]+[.]{1}[\\d]+") || buyingPriceText.getText().matches("[\\d]+")) && (sellingPriceText.getText().matches("[\\d]+[.]{1}[\\d]+") || sellingPriceText.getText().matches("[\\d]+")) && Integer.parseInt(qOHText.getText().trim()) > 0) {
                    String itemCode = itemCodeCombo.getSelectedItem().toString().split("<##>")[1].trim();
                    String categoryID = "null";
                    String name = newItemName.getText().trim();
                    int qoh = Integer.parseInt(qOHText.getText().trim());
                    double buyingprice = Double.parseDouble(buyingPriceText.getText().trim());
                    double sellingprice = Double.parseDouble(sellingPriceText.getText().trim());

                    Item item = new Item(itemCode, categoryID, name, qoh, buyingprice, sellingprice);
                    ItemControllerByChule itemController = new ItemControllerByChule();

                    int res = 0;
                    try {
                        res = itemController.updateItem(item);
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                    }
                    if (res > 0) {
                        JOptionPane.showMessageDialog(this, "Item Updated Successfully");
                        try {
                            getItemList();
                            itemCodeCombo.setEnabled(true);
                        } catch (ClassNotFoundException ex) {
                            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                        }
                        newItemName.setText(null);
                        buyingPriceText.setText(null);
                        sellingPriceText.setText(null);
                        qOHText.setText(null);
                        catergoryName.setText(null);
                        itemCodeCombo.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Item Update Failed");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please check buying and selling price or qtyOnHand", null, JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Some characters are not allowed for the itemName name", null, JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill all fields", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void itemCodeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCodeComboActionPerformed

    }//GEN-LAST:event_itemCodeComboActionPerformed

    private void itemCodeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemCodeComboItemStateChanged

        if (itemCodeCombo.getItemCount() > 0 && itemCodeCombo.getSelectedItem().toString().trim().length() > 1&&itemCodeCombo.getSelectedIndex()!=-1) {
            String ItemCode = itemCodeCombo.getSelectedItem().toString().split("<##>")[1].trim();
            ItemControllerByChule itemController = new ItemControllerByChule();
            try {
                Item item = itemController.searchItem(ItemCode.trim());
                CatergoryControllerByChule catergoryController = new CatergoryControllerByChule();
                Catergory searchCatergory = catergoryController.searchCatergory(item.getCatergoryId());
                if (item != null) {
                    catergoryName.setText(searchCatergory.getCatergoryName().trim());
                    qOHText.setText(String.valueOf(item.getQtyOnHand()));
                    buyingPriceText.setText(String.valueOf(item.getSupplierPrice()));
                    sellingPriceText.setText(String.valueOf(item.getSellingprice()));
                } else {

                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            }
        } else if (itemCodeCombo.getSelectedItem() != null && itemCodeCombo.getSelectedItem().toString().trim().length() <= 1) {
            catergoryName.setText(null);
            qOHText.setText(null);
            buyingPriceText.setText(null);
            sellingPriceText.setText(null);
        }

    }//GEN-LAST:event_itemCodeComboItemStateChanged

    private void newItemNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newItemNameKeyReleased
        Validation.validateName(newItemName);
    }//GEN-LAST:event_newItemNameKeyReleased

    private void buyingPriceTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buyingPriceTextKeyReleased
        Validation.validateprice(buyingPriceText);
    }//GEN-LAST:event_buyingPriceTextKeyReleased

    private void sellingPriceTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sellingPriceTextKeyReleased
        Validation.validateprice(sellingPriceText);
    }//GEN-LAST:event_sellingPriceTextKeyReleased

    private void newItemNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newItemNameFocusGained
        
    }//GEN-LAST:event_newItemNameFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buyingPriceText;
    private javax.swing.JTextField catergoryName;
    private javax.swing.JComboBox itemCodeCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton modifyButton;
    private javax.swing.JTextField newItemName;
    private javax.swing.JTextField qOHText;
    private javax.swing.JTextField sellingPriceText;
    // End of variables declaration//GEN-END:variables

    private void getItemList() throws ClassNotFoundException, SQLException, IOException {
        itemCodeCombo.removeAllItems();
        ItemControllerByChule itemController = new ItemControllerByChule();
        ArrayList<Item> allItem = itemController.getAllItems();
        itemCodeCombo.addItem("");
        for (Item item : allItem) {
            itemCodeCombo.addItem(item.getItemName().trim() + "<##>" + item.getItemCode().trim());
        }
        getItemList.setSearchableCombo(itemCodeCombo, true, null);
    }
}
