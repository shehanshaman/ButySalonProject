/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.UserControllerByChule;
import controller.UserControllerByDilan;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import models.User;

/**
 *
 * @author Kanishka Gunarathna
 */
public class ModifyAccountPenal extends javax.swing.JPanel {

    /**
     * Creates new form ModifyAccountPenal
     */
    public ModifyAccountPenal() {
        initComponents();
        newPassword.setEnabled(false);
        confirmPassword.setEnabled(false);
        try {
            loadAllUsers();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        messageLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        newPassword = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        messageLabel2 = new javax.swing.JLabel();
        modifyButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        userComboBox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel2.setText("User Name               :");
        add(jLabel2);
        jLabel2.setBounds(47, 84, 176, 22);

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel3.setText("Password                  :");
        add(jLabel3);
        jLabel3.setBounds(46, 148, 177, 22);

        password.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        add(password);
        password.setBounds(247, 147, 279, 29);

        messageLabel.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        messageLabel.setForeground(new java.awt.Color(204, 0, 0));
        add(messageLabel);
        messageLabel.setBounds(157, 189, 470, 30);
        add(jSeparator1);
        jSeparator1.setBounds(11, 62, 772, 10);

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 36)); // NOI18N
        jLabel1.setText("Modify User Account");
        add(jLabel1);
        jLabel1.setBounds(234, 7, 343, 44);

        jLabel7.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel7.setText("New Password         :");
        add(jLabel7);
        jLabel7.setBounds(59, 258, 175, 22);

        newPassword.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        newPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPasswordActionPerformed(evt);
            }
        });
        add(newPassword);
        newPassword.setBounds(252, 258, 279, 29);

        confirmPassword.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        confirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordActionPerformed(evt);
            }
        });
        add(confirmPassword);
        confirmPassword.setBounds(252, 306, 279, 29);

        jLabel8.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel8.setText("Confirm Password  :");
        add(jLabel8);
        jLabel8.setBounds(59, 306, 175, 22);

        messageLabel2.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        messageLabel2.setForeground(new java.awt.Color(204, 0, 0));
        add(messageLabel2);
        messageLabel2.setBounds(170, 350, 400, 30);

        modifyButton.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });
        add(modifyButton);
        modifyButton.setBounds(589, 349, 93, 31);

        jButton2.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(692, 349, 91, 31);
        add(jSeparator2);
        jSeparator2.setBounds(11, 230, 772, 10);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/fresh-green-background.jpg"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(0, 0, 862, 70);

        add(userComboBox);
        userComboBox.setBounds(250, 90, 280, 30);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Reset Password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(620, 90, 170, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        try {
            if (UserControllerByChule.verifyUser(userComboBox.getSelectedItem().toString().split("<##>")[0].trim(), String.valueOf(password.getPassword()))) {
                newPassword.setEnabled(true);
                confirmPassword.setEnabled(true);
                newPassword.requestFocus();
                messageLabel.setText(null);
            } else {
                messageLabel.setText("User is not verified ");
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_passwordActionPerformed

    private void newPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPasswordActionPerformed
        confirmPassword.requestFocus();
    }//GEN-LAST:event_newPasswordActionPerformed

    private void confirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordActionPerformed
        if (Arrays.equals(newPassword.getPassword(), confirmPassword.getPassword())) {
            modifyButton.doClick();
        } else {
            messageLabel2.setText("Password dosen't match");
        }
    }//GEN-LAST:event_confirmPasswordActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        if (newPassword.getPassword().length != 0 && confirmPassword.getPassword().length != 0 && Arrays.equals(newPassword.getPassword(), confirmPassword.getPassword())) {
            try {
                int res = UserControllerByChule.updateUser(new User(userComboBox.getSelectedItem().toString().split("<##>")[0].trim(), String.valueOf(confirmPassword.getPassword()), null));
                if (res > 0) {
                    JOptionPane.showMessageDialog(null, "Password changing is successed", null, JOptionPane.INFORMATION_MESSAGE);
                    password.setText(null);
                    newPassword.setText(null);
                    confirmPassword.setText(null);
                    newPassword.setEnabled(false);
                    confirmPassword.setEnabled(false);
                    messageLabel2.setText(null);
                } else {
                    JOptionPane.showMessageDialog(null, "Password changing is not successed", null, JOptionPane.ERROR_MESSAGE);
                    password.setText(null);
                    newPassword.setText(null);
                    confirmPassword.setText(null);
                    newPassword.setEnabled(false);
                    confirmPassword.setEnabled(false);
                    messageLabel2.setText(null);
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            }
        } else if (!Arrays.equals(newPassword.getPassword(), confirmPassword.getPassword())) {
            messageLabel2.setText("Password dosen't match");
        } else {
            messageLabel2.setText("Please fill all fields");
        }
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int updateUser = UserControllerByDilan.updateUser(new User(userComboBox.getSelectedItem().toString().split("<##>")[0].trim(), "1234", null));
            if (updateUser > 0) {
                JOptionPane.showMessageDialog(null, "Reseting is succed" + "\n" + "New password is 1234 change password ASAP", null, JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Reseting is not succed", null, JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        newPassword.setText(null);
        confirmPassword.setText(null);
        password.setText(null);
        newPassword.setEnabled(false);
        confirmPassword.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel messageLabel2;
    private javax.swing.JButton modifyButton;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JPasswordField password;
    private javax.swing.JComboBox userComboBox;
    // End of variables declaration//GEN-END:variables

    private void loadAllUsers() throws ClassNotFoundException, SQLException, IOException {
        userComboBox.removeAllItems();
        ArrayList<User> allUsers = UserControllerByChule.getAllUser();
        for (User user : allUsers) {
            userComboBox.addItem(user.getUserName().trim() + "<##>" + user.getType().trim());
        }
    }
}
