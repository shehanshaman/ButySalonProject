/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import comboSearch.ComboSearch;
import controller.CatergoryControllerByChule;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import models.Catergory;
import validation.Validation;

/**
 *
 * @author Kanishka Gunarathna
 */
public class ModifyCategoryPenal extends javax.swing.JPanel {

    /**
     * Creates new form ModifyItamPenal
     */
    private ComboSearch getCategoryList;

    public ModifyCategoryPenal() {
        try {
            initComponents();
            getCategoryList = new ComboSearch();
            getCategoryList();
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        categoryIdCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        newCategoryNameText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        modifyCategoryButton = new javax.swing.JButton();
        categoryNameText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        categoryIdCombo.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        categoryIdCombo.setForeground(new java.awt.Color(51, 51, 255));
        categoryIdCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoryIdComboItemStateChanged(evt);
            }
        });
        categoryIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryIdComboActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel2.setText("Category ID   :");

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 36)); // NOI18N
        jLabel1.setText("Modify Category");

        newCategoryNameText.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        newCategoryNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newCategoryNameTextFocusGained(evt);
            }
        });
        newCategoryNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCategoryNameTextActionPerformed(evt);
            }
        });
        newCategoryNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newCategoryNameTextKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel3.setText("New Category Name   :");

        modifyCategoryButton.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        modifyCategoryButton.setText("Modify");
        modifyCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyCategoryButtonActionPerformed(evt);
            }
        });

        categoryNameText.setEditable(false);
        categoryNameText.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel6.setText("Category Name   :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(categoryNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(newCategoryNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(categoryIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(modifyCategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(categoryIdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(categoryNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCategoryNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(34, 34, 34)
                .addComponent(modifyCategoryButton)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newCategoryNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCategoryNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCategoryNameTextActionPerformed

    private void modifyCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyCategoryButtonActionPerformed
        if (categoryIdCombo.getSelectedItem().toString().length() > 1&&newCategoryNameText.getText().trim().length()>0) {
            StringTokenizer st=new StringTokenizer(newCategoryNameText.getText().trim()); 
		int i=0;
		String token="";
		while(st.hasMoreTokens()){			
			token=st.nextToken("<##>");
			if((token!=null)&& !token.equals(newCategoryNameText.getText().trim())){
				i++;
			}			
		}
            if (i == 0 && categoryIdCombo.getSelectedIndex() != -1) {
                String categoryID = categoryIdCombo.getSelectedItem().toString().split("<##>")[1].trim();
                String categoryName = newCategoryNameText.getText().trim();
                Catergory category = new Catergory(categoryID, categoryName);
                CatergoryControllerByChule catergoryController = new CatergoryControllerByChule();
                int res = 0;
                try {
                    if (!newCategoryNameText.getText().isEmpty()) {
                        res = catergoryController.updateCatergory(new Catergory(categoryID, categoryName));
                    } else {
                        JOptionPane.showMessageDialog(null, "Please give a name", null, JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                }
                if (res > 0) {
                    JOptionPane.showMessageDialog(this, "Category Updated Successfully");
                    try {
                        getCategoryList();
                        categoryIdCombo.setEnabled(true);
                        categoryNameText.setText(null);
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
                    }
                    newCategoryNameText.setText(null);
                } else {
                    JOptionPane.showMessageDialog(this, "Category Update Failed");
                }
            } else if (categoryIdCombo.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(null, "You didn't select the catergory", null, JOptionPane.ERROR_MESSAGE);
            } else if(i!=0) {
                JOptionPane.showMessageDialog(null, "Some characters are not allowed for the catergory name", null, JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a the catergory");
        }
    }//GEN-LAST:event_modifyCategoryButtonActionPerformed

    private void categoryIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryIdComboActionPerformed

    }//GEN-LAST:event_categoryIdComboActionPerformed

    private void categoryIdComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoryIdComboItemStateChanged

        if (categoryIdCombo.getItemCount() > 0 && categoryIdCombo.getSelectedItem().toString().trim().length() > 1 && categoryIdCombo.getSelectedItem().toString().trim().split("<##>").length == 2) {
            String categoryID = categoryIdCombo.getSelectedItem().toString().toString().trim().split("<##>")[1];
            CatergoryControllerByChule catergoryController = new CatergoryControllerByChule();
            try {
                Catergory catergory = catergoryController.searchCatergory(categoryID);
                if (catergory != null) {
                    categoryNameText.setText(catergory.getCatergoryName());
                    newCategoryNameText.setEditable(true);
                    newCategoryNameText.setText(categoryNameText.getText());
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "ClassNotFoundException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "SQLException occured. Please restart the system", null, JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "IOException occured." + "\n" + "ex.getMessage", null, JOptionPane.ERROR_MESSAGE);
            }
        } else if (categoryIdCombo.getSelectedItem() != null && categoryIdCombo.getSelectedItem().toString().trim().length() <= 1) {
            categoryNameText.setText(null);
            newCategoryNameText.setText(null);
        }
    }//GEN-LAST:event_categoryIdComboItemStateChanged

    private void newCategoryNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newCategoryNameTextKeyReleased
        Validation.validateName(newCategoryNameText);
    }//GEN-LAST:event_newCategoryNameTextKeyReleased

    private void newCategoryNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newCategoryNameTextFocusGained

    }//GEN-LAST:event_newCategoryNameTextFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox categoryIdCombo;
    private javax.swing.JTextField categoryNameText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton modifyCategoryButton;
    private javax.swing.JTextField newCategoryNameText;
    // End of variables declaration//GEN-END:variables

    private void getCategoryList() throws ClassNotFoundException, SQLException, IOException {
        categoryIdCombo.removeAllItems();
        CatergoryControllerByChule catergoryController = new CatergoryControllerByChule();
        ArrayList<Catergory> allCategories = catergoryController.getAllCatergories();
        categoryIdCombo.addItem("");
        for (Catergory category : allCategories) {
            categoryIdCombo.addItem(category.getCatergoryName().trim() + "<##>" + category.getCategeryId().trim());
        }
        getCategoryList.setSearchableCombo(categoryIdCombo, true, null);
    }

}
