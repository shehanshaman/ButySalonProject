/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CreditController;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import validation.Validation;

/**
 *
 * @author pavilion 15
 */
public class CreditFrame extends javax.swing.JDialog {

    private NewOrderPenal panal;

    /**
     * Creates new form DiscountFrame
     */
    public CreditFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
    }

    public CreditFrame(java.awt.Frame parent, boolean modal, NewOrderPenal panal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        this.panal = panal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        orderIdField = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(204, 0, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Credits");
        jLabel1.setOpaque(true);

        orderIdField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        orderIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdFieldActionPerformed(evt);
            }
        });
        orderIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                orderIdFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orderIdFieldKeyReleased(evt);
            }
        });

        amountField.setEditable(false);
        amountField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        amountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountFieldActionPerformed(evt);
            }
        });
        amountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountFieldKeyReleased(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(6, 137, 6));
        addButton.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel2.setText("Order Id :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel3.setText("Amount :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderIdField)
                            .addComponent(amountField))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        CreditController controller = new CreditController();
        try {
            double credits = controller.getCredits(orderIdField.getText().trim());
            if (String.valueOf(credits).equals(amountField.getText().trim())&&amountField.getText().trim().length()>0) {
                panal.creditAmount.setText(amountField.getText().trim());
                panal.netTotalAmount.setText(String.valueOf((Double.parseDouble(panal.netTotalAmount.getText().trim()) - Double.parseDouble(amountField.getText().trim()))));                
                panal.creditCBox.setSelected(false);
                if(Double.parseDouble(amountField.getText().trim())>0){
                    panal.creditCBox.setEnabled(false);
                }else{
                    panal.creditCBox.setEnabled(true);
                }
                panal.returnOrderId=orderIdField.getText().trim();
                this.dispose();
            } else if(amountField.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "There is no credit\nPlease add a orderId in the Order Id field and press Enter", "", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Check your orderId again", "", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CreditFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreditFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CreditFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        /*
         if (!amountField.getText().isEmpty() || !presentageField.getText().isEmpty()) {
         if (amountRButton.isSelected()) {
         if ((amountField.getText().trim().matches("[\\d]+[.]{1}[\\d]+") || amountField.getText().trim().matches("[\\d]+")) && Double.parseDouble(amountField.getText().trim()) <= Double.parseDouble(panal.totalAmount.getText().trim())) {
         panal.discountAmount.setText(amountField.getText().trim());
         panal.netTotalAmount.setText(String.valueOf((Double.parseDouble(panal.totalAmount.getText().trim()) - Double.parseDouble(amountField.getText().trim()))));
         panal.discountCBox.setSelected(false);
         panal.amount.requestFocus();
         this.dispose();
         } else {
         JOptionPane.showMessageDialog(null, "Please check discount amount", null, JOptionPane.ERROR_MESSAGE);
         }

         } else if (presentageButton.isSelected()) {
         if ((Double.parseDouble(presentageField.getText().trim()) <= 100) && (presentageField.getText().trim().matches("[\\d]+[.]{1}[\\d]+") || presentageField.getText().trim().matches("[\\d]+"))) {
         String discount = String.format("%1$.2f", ((Double.parseDouble(panal.totalAmount.getText().trim()) * Double.parseDouble(presentageField.getText().trim())) / 100));
         panal.discountAmount.setText(discount);
         panal.netTotalAmount.setText(String.valueOf((Double.parseDouble(panal.totalAmount.getText().trim()) - Double.parseDouble(panal.discountAmount.getText().trim()))));
         panal.discountCBox.setSelected(false);
         panal.amount.requestFocus();
         this.dispose();
         } else {
         JOptionPane.showMessageDialog(null, "Invalid presentage", null, JOptionPane.ERROR_MESSAGE);
         presentageField.setText(null);
         }
         }
         } else {
         JOptionPane.showMessageDialog(null, "You must field atleast one field", null, JOptionPane.WARNING_MESSAGE);
         }
         */
    }//GEN-LAST:event_addButtonActionPerformed

    private void orderIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdFieldActionPerformed
        CreditController controller = new CreditController();
        try {
            double credits = controller.getCredits(orderIdField.getText().trim());
            amountField.setText(String.valueOf(credits));
        } catch (SQLException ex) {
            Logger.getLogger(CreditFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreditFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CreditFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_orderIdFieldActionPerformed

    private void amountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountFieldActionPerformed
        
    }//GEN-LAST:event_amountFieldActionPerformed

    private void orderIdFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderIdFieldKeyReleased

    }//GEN-LAST:event_orderIdFieldKeyReleased

    private void amountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountFieldKeyReleased

    }//GEN-LAST:event_amountFieldKeyReleased

    private void orderIdFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderIdFieldKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_DELETE) || (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)) {
            amountField.setText(null);
        }
    }//GEN-LAST:event_orderIdFieldKeyPressed

    private void amountFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountFieldKeyPressed

    }//GEN-LAST:event_amountFieldKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        panal.creditCBox.setSelected(false);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreditFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreditFrame dialog = new CreditFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField orderIdField;
    private javax.swing.ButtonGroup typeButtonGroup;
    // End of variables declaration//GEN-END:variables
}
